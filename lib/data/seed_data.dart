import '../domain/entities/workspace.dart';
import '../domain/entities/task.dart';

class SeedData {
  static List<Workspace> getSampleWorkspaces() {
    return [
      Workspace(
        id: 1,
        name: 'Personal Projects',
        description: 'My personal development projects',
        iconName: 'person',
        colorHex: '#3B82F6',
        createdAt: DateTime(2024, 1, 1),
        updatedAt: DateTime(2024, 1, 1),
        totalTasks: 5,
        completedTasks: 2,
        order: 0,
      ),
      Workspace(
        id: 2,
        name: 'Work Tasks',
        description: 'Professional work assignments',
        iconName: 'work',
        colorHex: '#10B981',
        createdAt: DateTime(2024, 1, 2),
        updatedAt: DateTime(2024, 1, 2),
        totalTasks: 8,
        completedTasks: 3,
        order: 1,
      ),
      Workspace(
        id: 3,
        name: 'Study',
        description: 'Learning and education',
        iconName: 'school',
        colorHex: '#F59E0B',
        createdAt: DateTime(2024, 1, 3),
        updatedAt: DateTime(2024, 1, 3),
        totalTasks: 3,
        completedTasks: 1,
        order: 2,
      ),
      Workspace(
        id: 4,
        name: 'Fitness',
        description: 'Health and fitness goals',
        iconName: 'fitness_center',
        colorHex: '#EF4444',
        createdAt: DateTime(2024, 1, 4),
        updatedAt: DateTime(2024, 1, 4),
        totalTasks: 2,
        completedTasks: 0,
        order: 3,
      ),
    ];
  }

  static List<Task> getSampleTasks() {
    return [
      // Personal Projects tasks
      Task(
        id: 1,
        title: 'Design the new landing page',
        description: 'Create a modern and responsive landing page design',
        dueDate: DateTime.now().add(const Duration(days: 1)),
        isCompleted: false,
        priority: TaskPriority.high,
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
        updatedAt: DateTime.now(),
        category: 'Design',
        workspaceId: 1,
        progress: 0.6,
        estimatedHours: 4,
      ),
      Task(
        id: 2,
        title: 'Develop the API endpoints',
        description: 'Create REST API endpoints for user management',
        dueDate: DateTime.now().add(const Duration(days: 3)),
        isCompleted: false,
        priority: TaskPriority.medium,
        createdAt: DateTime.now().subtract(const Duration(days: 1)),
        updatedAt: DateTime.now(),
        category: 'Development',
        workspaceId: 1,
        progress: 0.25,
        estimatedHours: 8,
      ),
      Task(
        id: 3,
        title: 'Write the documentation',
        description: 'Document the API and user guide',
        dueDate: DateTime.now().subtract(const Duration(days: 1)),
        isCompleted: false,
        priority: TaskPriority.low,
        createdAt: DateTime.now().subtract(const Duration(days: 3)),
        updatedAt: DateTime.now(),
        category: 'Documentation',
        workspaceId: 1,
        progress: 0.1,
        estimatedHours: 4,
      ),
      Task(
        id: 4,
        title: 'Setup CI/CD pipeline',
        description: 'Configure automated testing and deployment',
        dueDate: DateTime.now().add(const Duration(days: 5)),
        isCompleted: true,
        priority: TaskPriority.medium,
        createdAt: DateTime.now().subtract(const Duration(days: 5)),
        updatedAt: DateTime.now(),
        category: 'DevOps',
        workspaceId: 1,
        progress: 1.0,
        estimatedHours: 6,
      ),
      Task(
        id: 5,
        title: 'Code review and testing',
        description: 'Review code and write unit tests',
        dueDate: DateTime.now().add(const Duration(days: 2)),
        isCompleted: true,
        priority: TaskPriority.high,
        createdAt: DateTime.now().subtract(const Duration(days: 4)),
        updatedAt: DateTime.now(),
        category: 'Quality Assurance',
        workspaceId: 1,
        progress: 1.0,
        estimatedHours: 3,
      ),
      // Work Tasks
      Task(
        id: 6,
        title: 'Prepare quarterly report',
        description: 'Compile and analyze Q1 performance data',
        dueDate: DateTime.now().add(const Duration(days: 7)),
        isCompleted: false,
        priority: TaskPriority.high,
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
        updatedAt: DateTime.now(),
        category: 'Reporting',
        workspaceId: 2,
        progress: 0.4,
        estimatedHours: 6,
      ),
      Task(
        id: 7,
        title: 'Team meeting preparation',
        description: 'Prepare agenda and materials for weekly team meeting',
        dueDate: DateTime.now().add(const Duration(days: 1)),
        isCompleted: false,
        priority: TaskPriority.medium,
        createdAt: DateTime.now().subtract(const Duration(days: 1)),
        updatedAt: DateTime.now(),
        category: 'Management',
        workspaceId: 2,
        progress: 0.8,
        estimatedHours: 2,
      ),
      Task(
        id: 8,
        title: 'Client presentation',
        description: 'Prepare presentation for client meeting',
        dueDate: DateTime.now().add(const Duration(days: 4)),
        isCompleted: true,
        priority: TaskPriority.urgent,
        createdAt: DateTime.now().subtract(const Duration(days: 3)),
        updatedAt: DateTime.now(),
        category: 'Presentation',
        workspaceId: 2,
        progress: 1.0,
        estimatedHours: 4,
      ),
      // Study tasks
      Task(
        id: 9,
        title: 'Complete Flutter course',
        description: 'Finish the advanced Flutter development course',
        dueDate: DateTime.now().add(const Duration(days: 10)),
        isCompleted: false,
        priority: TaskPriority.medium,
        createdAt: DateTime.now().subtract(const Duration(days: 5)),
        updatedAt: DateTime.now(),
        category: 'Learning',
        workspaceId: 3,
        progress: 0.3,
        estimatedHours: 20,
      ),
      Task(
        id: 10,
        title: 'Read design patterns book',
        description: 'Study software design patterns',
        dueDate: DateTime.now().add(const Duration(days: 14)),
        isCompleted: true,
        priority: TaskPriority.low,
        createdAt: DateTime.now().subtract(const Duration(days: 7)),
        updatedAt: DateTime.now(),
        category: 'Reading',
        workspaceId: 3,
        progress: 1.0,
        estimatedHours: 15,
      ),
      // Fitness tasks
      Task(
        id: 11,
        title: 'Gym workout routine',
        description: 'Complete 3x weekly gym sessions',
        dueDate: DateTime.now().add(const Duration(days: 7)),
        isCompleted: false,
        priority: TaskPriority.medium,
        createdAt: DateTime.now().subtract(const Duration(days: 2)),
        updatedAt: DateTime.now(),
        category: 'Exercise',
        workspaceId: 4,
        progress: 0.0,
        estimatedHours: 6,
      ),
    ];
  }
}
